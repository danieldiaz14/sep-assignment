1. Describe an analogy for relating an algorithm that has efficiency O(1)
and another algorithm that has O(2n).

  An algorithm that has O(1) is a Rabbit and an algorithm that has O(2n) is a Turtle.


2. In plain English, what is the best case scenario for binary search?

  In the best case or Big-Omega the value you are searching for is in the middle and
  binary search runs in constant time or Ω(1).

3. In plain English, what is the worst-case scenario for binary search?

  The worse case scenario for binary search or the Big-O is O(log n),
  a case like this would be if the value you are searching for is either
  the first element in the array or the last.

4. In plain English, what is the bounded-case scenario for binary search?

  The bounded-case is a scenario that is faster than the worse case but
  slower than the best case.

5. Create a graph using the data below. Here's a CSV with the values you'll need.
  https://i.stack.imgur.com/fdcL3.gif

6. What is the limit of the function above as n approaches infinity?
  as n approaches infinity the limit is also infinity.

7. What is the Big-O of an algorithm that has the data points above?

  The Big-O of an algorithm with the data of the graph is 2^n.

8. Write a Ruby method that takes a number n.
This method must print the worst-case number of iterations for
linear search to find an item in collections of size one to n.
Use it to generate a table of worst-case iterations of collections up to size 10.

def iterations (n)
  return n
end

9. Create a graph from the output using Google Sheets or other graphing software.
Analyze the graph and denote its Big-O somewhere on the graph.

  https://mathspace-production-media.mathspace.co/media/upload/images/001_Chapter_Entries/CoordinateGeometry/linear1.png

10. What is the Big-O of binary search?
  The Big-O is O(logn).

11. What is the Big-Ω of binary search?
  The Big-Ω is Ω(1), which is constant time or everything you check a value it is always that value.

12. What is the Big-Ө of binary search?
  The Big-Ө is Ө(logn), this will be the result most of the time binary search is used.
